# APPLICATION
#spring.profiles.active=production,docker
#spring.profiles.active=demo,dev,local,db-mysql,docs
#spring.profiles.active=dev,test,local,db-mysql,docs
#server.error.include-stacktrace=always
# DLL-AUTO values:
# validate: validate the schema, makes no changes to the database.
# update: update the schema.
# create: creates the schema, destroying previous data.
# create-drop: drop the schema at the end of the session
#spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true

#logging.level.root=TRACE
spring.jpa.properties.hibernate.id.db_structure_naming_strategy=single

schpincer.external=test/external/
# FILE
spring.servlet.multipart.max-file-size=2000KB
spring.servlet.multipart.max-request-size=2000KB
#spring.servlet.multipart.enabled=false
schpincer.api-tokens=${API_TOKENS:}

schpincer.storage-cache-max-age=86400
server.servlet.session.timeout=1440m
schpincer.api.base-url=https://localhost:8080/

spring.devtools.restart.enabled=false

spring.security.oauth2.client.registration.authsch.provider=authsch
spring.security.oauth2.client.registration.authsch.client-id=TODO
spring.security.oauth2.client.registration.authsch.client-secret=TODO
spring.security.oauth2.client.registration.authsch.scope=openid,profile,email,meta.bme.hu:unitScope,pek.sch.bme.hu:profile
spring.security.oauth2.client.registration.authsch.redirect-uri=http://localhost:8080/login/oauth2/code/authsch
spring.security.oauth2.client.provider.authsch.issuer-uri=https://auth.sch.bme.hu
spring.security.oauth2.client.provider.authsch.user-name-attribute=name

management.endpoint.health.probes.enabled=true
management.endpoints.web.exposure.include=*
management.metrics.distribution.percentiles-histogram.http.server.requests=true
spring.jpa.properties.hibernate.generate_statistics=true
management.metrics.tags.application=schpincer

logging.level.org.hibernate=warn
